
SETUP = 'setup'
LOOP = 'loop'
OUTPUT = 'output'
ARCHITECTURAL_STOP = 'architecturalStop'
GENERIC_NODE = 'NODE generic: '
STR_NODE = 'NODE Str: '
NAME_NODE = 'NODE Name: '
FUNCTION_DEF = 'Function Definition: '
NODE_ARGS = 'NODE arguments: '
NODE_ARG = 'NODE ARG: '
NODE_EXPR = 'NODE Expr: '
NODE_CALL = 'NODE Call: '
PARENTHESES = 'PARENTHESES '
NODE_NUM = 'NODE Num: '
NODE_RETURN = 'NODE Return: '
NODE_BINOP = 'NODE BinOp: '
NODE_WHILE = 'NODE While: '
NODE_WHILE_BODY = 'NODE While Body: '
NODE_LIST = 'NODE List: '
NODE_NAME_CONSTANT = 'NODE NameConstant: '
NODE_INDEX = 'NODE Index: '
NODE_IF = 'NODE If: '
NODE_ASSIGN = 'NODE Assign '
NODE_ATTRIBUTE = 'Attribute: '
NODE_FOR = 'NODE For : '
NODE_UNARYOP = 'NODE UnaryOp: '
NODE_SLICE = 'NODE Slice: '
NODE_AND = 'NODE And: '
NODE_OR = 'NODE Or: '
NODE_BOOLOP = 'NODE boolOp: '
NODE_LOAD = 'NODE Load: '
NODE_USUB = 'NODE USub: '
NODE_IS = 'NODE Is: '
NODE_IS_NOT = 'NODE IsNot: '
NODE_PASS = 'NODE Pass: '
NODE_COMPARE = 'NODE Compare: '
REGEX_IS_FUNCTION = '\w+\(((\w+, )*\w+)*\)'
REGEX_HAS_DOT = '\.'
REGEX_FUNCTION_NAME = '\w+\('
REGEX_SETUP_STATEMENT = '[^ ]\w+\('
REGEX_VARIABLE = '\w+ \w+\('
REGEX_ARCHITECTURE_VARIABLE = '(\w+\()|(\w+ =)'
REGEX_ARCHITECTURE_VARIABLE_2 = '\w+'
REGEX_VARIABLE_VALUE = ' \w+'
complubot_motor = {'ComplubotMotor', 'CompluBotMotor'}
complubot_control = {'ComplubotControl', 'CompluBotControl'}
mbot = {'MBot', 'mBot'}